<asp:GridView 
    ID="gvPersonal" 
    runat="server" 
    AutoGenerateColumns="False" 
    DataKeyNames="ID_Personal" 
    CssClass="table table-striped" 
    OnRowEditing="gvPersonal_RowEditing" 
    OnRowCancelingEdit="gvPersonal_RowCancelingEdit"
    OnRowUpdating="gvPersonal_RowUpdating">
    
    <Columns>
        <asp:BoundField DataField="ID_Personal" HeaderText="ID" ReadOnly="True" />
        <asp:TemplateField HeaderText="Nombre">
            <ItemTemplate>
                <asp:Label ID="lblNombrePersonal" runat="server" Text='<%# Bind("Nombre") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtNombrePersonal" runat="server" Text='<%# Bind("Nombre") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>
        <asp:TemplateField HeaderText="Apellido">
            <ItemTemplate>
                <asp:Label ID="lblApellidoPersonal" runat="server" Text='<%# Bind("Apellido") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtApellidoPersonal" runat="server" Text='<%# Bind("Apellido") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>
        <asp:TemplateField HeaderText="Cargo">
            <ItemTemplate>
                <asp:Label ID="lblCargo" runat="server" Text='<%# Bind("Cargo") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtCargo" runat="server" Text='<%# Bind("Cargo") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>
        <asp:CommandField ShowEditButton="True" ButtonType="Button" />
    </Columns>
</asp:GridView>

protected void gvPersonal_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    int idPersonal = Convert.ToInt32(gvPersonal.DataKeys[e.RowIndex].Value);

    GridViewRow fila = gvPersonal.Rows[e.RowIndex];

    TextBox txtNombrePersonal = (TextBox)fila.FindControl("txtNombrePersonal");
    TextBox txtApellidoPersonal = (TextBox)fila.FindControl("txtApellidoPersonal");
    TextBox txtCargo = (TextBox)fila.FindControl("txtCargo");

    string nuevoNombre = txtNombrePersonal.Text;
    string nuevoApellido = txtApellidoPersonal.Text;
    string nuevoCargo = txtCargo.Text;

    using (var contexto = new MiBaseDeDatosDataContext())
    {
        var personal = contexto.Personals.FirstOrDefault(p => p.ID_Personal == idPersonal);
        if (personal != null)
        {
            personal.Nombre = nuevoNombre;
            personal.Apellido = nuevoApellido;
            personal.Cargo = nuevoCargo;
            contexto.SubmitChanges();
        }
    }

    gvPersonal.EditIndex = -1;
    CargarPersonal();
}

<asp:GridView 
    ID="gvProducto" 
    runat="server" 
    AutoGenerateColumns="False" 
    DataKeyNames="ID_Producto" 
    CssClass="table table-striped" 
    OnRowEditing="gvProducto_RowEditing" 
    OnRowCancelingEdit="gvProducto_RowCancelingEdit"
    OnRowUpdating="gvProducto_RowUpdating">
    
    <Columns>
        <asp:BoundField DataField="ID_Producto" HeaderText="ID" ReadOnly="True" />
        <asp:TemplateField HeaderText="Nombre Producto">
            <ItemTemplate>
                <asp:Label ID="lblNombreProducto" runat="server" Text='<%# Bind("Nombre_Producto") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtNombreProducto" runat="server" Text='<%# Bind("Nombre_Producto") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>
        <asp:TemplateField HeaderText="Precio">
            <ItemTemplate>
                <asp:Label ID="lblPrecio" runat="server" Text='<%# Bind("Precio") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtPrecio" runat="server" Text='<%# Bind("Precio") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>
        <asp:TemplateField HeaderText="Stock">
            <ItemTemplate>
                <asp:Label ID="lblStock" runat="server" Text='<%# Bind("Stock") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtStock" runat="server" Text='<%# Bind("Stock") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>
        <asp:CommandField ShowEditButton="True" ButtonType="Button" />
    </Columns>
</asp:GridView>

protected void gvProducto_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    int idProducto = Convert.ToInt32(gvProducto.DataKeys[e.RowIndex].Value);

    GridViewRow fila = gvProducto.Rows[e.RowIndex];

    TextBox txtNombreProducto = (TextBox)fila.FindControl("txtNombreProducto");
    TextBox txtPrecio = (TextBox)fila.FindControl("txtPrecio");
    TextBox txtStock = (TextBox)fila.FindControl("txtStock");

    string nuevoNombreProducto = txtNombreProducto.Text;
    decimal nuevoPrecio = Convert.ToDecimal(txtPrecio.Text);
    int nuevoStock = Convert.ToInt32(txtStock.Text);

    using (var contexto = new MiBaseDeDatosDataContext())
    {
        var producto = contexto.Productos.FirstOrDefault(p => p.ID_Producto == idProducto);
        if (producto != null)
        {
            producto.Nombre_Producto = nuevoNombreProducto;
            producto.Precio = nuevoPrecio;
            producto.Stock = nuevoStock;
            contexto.SubmitChanges();
        }
    }

    gvProducto.EditIndex = -1;
    CargarProductos();
}

<asp:GridView 
    ID="gvUsuario" 
    runat="server" 
    AutoGenerateColumns="False" 
    DataKeyNames="id_Usuario" 
    CssClass="table table-striped" 
    OnRowEditing="gvUsuario_RowEditing" 
    OnRowCancelingEdit="gvUsuario_RowCancelingEdit"
    OnRowUpdating="gvUsuario_RowUpdating">
    
    <Columns>
        <asp:BoundField DataField="id_Usuario" HeaderText="ID" ReadOnly="True" />
        
        <asp:TemplateField HeaderText="Usuario">
            <ItemTemplate>
                <asp:Label ID="lblUsuario" runat="server" Text='<%# Bind("Usuario") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtUsuario" runat="server" Text='<%# Bind("Usuario") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>

        <asp:TemplateField HeaderText="Password">
            <ItemTemplate>
                <asp:Label ID="lblPassword" runat="server" Text='<%# Bind("Password") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtPassword" runat="server" Text='<%# Bind("Password") %>' TextMode="Password"></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>

        <asp:TemplateField HeaderText="Estado">
            <ItemTemplate>
                <asp:Label ID="lblEstado" runat="server" Text='<%# Bind("Estado") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtEstado" runat="server" Text='<%# Bind("Estado") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>

        <asp:TemplateField HeaderText="Fecha Creacion">
            <ItemTemplate>
                <asp:Label ID="lblFechaCreacion" runat="server" Text='<%# Bind("Fecha_Creacion", "{0:yyyy-MM-dd}") %>'></asp:Label>
            </ItemTemplate>
            <EditItemTemplate>
                <asp:TextBox ID="txtFechaCreacion" runat="server" Text='<%# Bind("Fecha_Creacion", "{0:yyyy-MM-dd}") %>'></asp:TextBox>
            </EditItemTemplate>
        </asp:TemplateField>

        <asp:CommandField ShowEditButton="True" ButtonType="Button" />
    </Columns>
</asp:GridView>

protected void gvUsuario_RowUpdating(object sender, GridViewUpdateEventArgs e)
{
    int idUsuario = Convert.ToInt32(gvUsuario.DataKeys[e.RowIndex].Value);

    GridViewRow fila = gvUsuario.Rows[e.RowIndex];

    TextBox txtUsuario = (TextBox)fila.FindControl("txtUsuario");
    TextBox txtPassword = (TextBox)fila.FindControl("txtPassword");
    TextBox txtEstado = (TextBox)fila.FindControl("txtEstado");
    TextBox txtFechaCreacion = (TextBox)fila.FindControl("txtFechaCreacion");

    string nuevoUsuario = txtUsuario.Text;
    string nuevoPassword = txtPassword.Text;
    string nuevoEstado = txtEstado.Text;
    DateTime nuevaFechaCreacion = DateTime.Parse(txtFechaCreacion.Text);

    using (var contexto = new MiBaseDeDatosDataContext())
    {
        var usuario = contexto.Usuarios.FirstOrDefault(u => u.id_Usuario == idUsuario);
        if (usuario != null)
        {
            usuario.Usuario = nuevoUsuario;
            usuario.Password = nuevoPassword;
            usuario.Estado = nuevoEstado;
            usuario.Fecha_Creacion = nuevaFechaCreacion;
            contexto.SubmitChanges();
        }
    }

    gvUsuario.EditIndex = -1;
    CargarUsuarios();
}
