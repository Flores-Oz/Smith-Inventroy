#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmithInventory.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SmithInventory")]
	public partial class DCSmithDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCasa_Farmaceutica(Casa_Farmaceutica instance);
    partial void UpdateCasa_Farmaceutica(Casa_Farmaceutica instance);
    partial void DeleteCasa_Farmaceutica(Casa_Farmaceutica instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertDetalle_Lote_Ingreso(Detalle_Lote_Ingreso instance);
    partial void UpdateDetalle_Lote_Ingreso(Detalle_Lote_Ingreso instance);
    partial void DeleteDetalle_Lote_Ingreso(Detalle_Lote_Ingreso instance);
    partial void InsertDetalles_Venta(Detalles_Venta instance);
    partial void UpdateDetalles_Venta(Detalles_Venta instance);
    partial void DeleteDetalles_Venta(Detalles_Venta instance);
    partial void InsertEstados(Estados instance);
    partial void UpdateEstados(Estados instance);
    partial void DeleteEstados(Estados instance);
    partial void InsertLote_Ingreso(Lote_Ingreso instance);
    partial void UpdateLote_Ingreso(Lote_Ingreso instance);
    partial void DeleteLote_Ingreso(Lote_Ingreso instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertTipo_Cliente(Tipo_Cliente instance);
    partial void UpdateTipo_Cliente(Tipo_Cliente instance);
    partial void DeleteTipo_Cliente(Tipo_Cliente instance);
    partial void InsertVenta(Venta instance);
    partial void UpdateVenta(Venta instance);
    partial void DeleteVenta(Venta instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertPersonal(Personal instance);
    partial void UpdatePersonal(Personal instance);
    partial void DeletePersonal(Personal instance);
    partial void InsertReporte(Reporte instance);
    partial void UpdateReporte(Reporte instance);
    partial void DeleteReporte(Reporte instance);
    #endregion
		
		public DCSmithDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCSmithDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCSmithDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCSmithDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Casa_Farmaceutica> Casa_Farmaceutica
		{
			get
			{
				return this.GetTable<Casa_Farmaceutica>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Detalle_Lote_Ingreso> Detalle_Lote_Ingreso
		{
			get
			{
				return this.GetTable<Detalle_Lote_Ingreso>();
			}
		}
		
		public System.Data.Linq.Table<Detalles_Venta> Detalles_Venta
		{
			get
			{
				return this.GetTable<Detalles_Venta>();
			}
		}
		
		public System.Data.Linq.Table<Estados> Estados
		{
			get
			{
				return this.GetTable<Estados>();
			}
		}
		
		public System.Data.Linq.Table<Lote_Ingreso> Lote_Ingreso
		{
			get
			{
				return this.GetTable<Lote_Ingreso>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Cliente> Tipo_Cliente
		{
			get
			{
				return this.GetTable<Tipo_Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Venta> Venta
		{
			get
			{
				return this.GetTable<Venta>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Personal> Personal
		{
			get
			{
				return this.GetTable<Personal>();
			}
		}
		
		public System.Data.Linq.Table<Reporte> Reportes
		{
			get
			{
				return this.GetTable<Reporte>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Casa_Farmaceutica")]
	public partial class Casa_Farmaceutica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CasaFarmaceutica;
		
		private string _Casa_Farmaceutica1;
		
		private string _Detalle;
		
		private EntitySet<Lote_Ingreso> _Lote_Ingreso;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CasaFarmaceuticaChanging(int value);
    partial void OnID_CasaFarmaceuticaChanged();
    partial void OnCasa_Farmaceutica1Changing(string value);
    partial void OnCasa_Farmaceutica1Changed();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    #endregion
		
		public Casa_Farmaceutica()
		{
			this._Lote_Ingreso = new EntitySet<Lote_Ingreso>(new Action<Lote_Ingreso>(this.attach_Lote_Ingreso), new Action<Lote_Ingreso>(this.detach_Lote_Ingreso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CasaFarmaceutica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CasaFarmaceutica
		{
			get
			{
				return this._ID_CasaFarmaceutica;
			}
			set
			{
				if ((this._ID_CasaFarmaceutica != value))
				{
					this.OnID_CasaFarmaceuticaChanging(value);
					this.SendPropertyChanging();
					this._ID_CasaFarmaceutica = value;
					this.SendPropertyChanged("ID_CasaFarmaceutica");
					this.OnID_CasaFarmaceuticaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Casa_Farmaceutica", Storage="_Casa_Farmaceutica1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Casa_Farmaceutica1
		{
			get
			{
				return this._Casa_Farmaceutica1;
			}
			set
			{
				if ((this._Casa_Farmaceutica1 != value))
				{
					this.OnCasa_Farmaceutica1Changing(value);
					this.SendPropertyChanging();
					this._Casa_Farmaceutica1 = value;
					this.SendPropertyChanged("Casa_Farmaceutica1");
					this.OnCasa_Farmaceutica1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="NVarChar(25)")]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Casa_Farmaceutica_Lote_Ingreso", Storage="_Lote_Ingreso", ThisKey="ID_CasaFarmaceutica", OtherKey="ID_CasaFarmaceutica")]
		public EntitySet<Lote_Ingreso> Lote_Ingreso
		{
			get
			{
				return this._Lote_Ingreso;
			}
			set
			{
				this._Lote_Ingreso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lote_Ingreso(Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Casa_Farmaceutica = this;
		}
		
		private void detach_Lote_Ingreso(Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Casa_Farmaceutica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Categoria;
		
		private string _Nombre_Categoria;
		
		private string _Descripcion_Categoria;
		
		private EntitySet<Producto> _Producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CategoriaChanging(int value);
    partial void OnID_CategoriaChanged();
    partial void OnNombre_CategoriaChanging(string value);
    partial void OnNombre_CategoriaChanged();
    partial void OnDescripcion_CategoriaChanging(string value);
    partial void OnDescripcion_CategoriaChanged();
    #endregion
		
		public Categoria()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Categoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Categoria
		{
			get
			{
				return this._ID_Categoria;
			}
			set
			{
				if ((this._ID_Categoria != value))
				{
					this.OnID_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_Categoria = value;
					this.SendPropertyChanged("ID_Categoria");
					this.OnID_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Categoria", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Nombre_Categoria
		{
			get
			{
				return this._Nombre_Categoria;
			}
			set
			{
				if ((this._Nombre_Categoria != value))
				{
					this.OnNombre_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Nombre_Categoria = value;
					this.SendPropertyChanged("Nombre_Categoria");
					this.OnNombre_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion_Categoria", DbType="NVarChar(250)")]
		public string Descripcion_Categoria
		{
			get
			{
				return this._Descripcion_Categoria;
			}
			set
			{
				if ((this._Descripcion_Categoria != value))
				{
					this.OnDescripcion_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Descripcion_Categoria = value;
					this.SendPropertyChanged("Descripcion_Categoria");
					this.OnDescripcion_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Producto", ThisKey="ID_Categoria", OtherKey="ID_Categoria")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Cliente;
		
		private string _DPI;
		
		private string _Nombre_Completo;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private int _id_Tipo;
		
		private EntitySet<Detalles_Venta> _Detalles_Venta;
		
		private EntityRef<Tipo_Cliente> _Tipo_Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ClienteChanging(int value);
    partial void OnID_ClienteChanged();
    partial void OnDPIChanging(string value);
    partial void OnDPIChanged();
    partial void OnNombre_CompletoChanging(string value);
    partial void OnNombre_CompletoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void Onid_TipoChanging(int value);
    partial void Onid_TipoChanged();
    #endregion
		
		public Cliente()
		{
			this._Detalles_Venta = new EntitySet<Detalles_Venta>(new Action<Detalles_Venta>(this.attach_Detalles_Venta), new Action<Detalles_Venta>(this.detach_Detalles_Venta));
			this._Tipo_Cliente = default(EntityRef<Tipo_Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPI", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string DPI
		{
			get
			{
				return this._DPI;
			}
			set
			{
				if ((this._DPI != value))
				{
					this.OnDPIChanging(value);
					this.SendPropertyChanging();
					this._DPI = value;
					this.SendPropertyChanged("DPI");
					this.OnDPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Completo", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string Nombre_Completo
		{
			get
			{
				return this._Nombre_Completo;
			}
			set
			{
				if ((this._Nombre_Completo != value))
				{
					this.OnNombre_CompletoChanging(value);
					this.SendPropertyChanging();
					this._Nombre_Completo = value;
					this.SendPropertyChanged("Nombre_Completo");
					this.OnNombre_CompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(95) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Tipo", DbType="Int NOT NULL")]
		public int id_Tipo
		{
			get
			{
				return this._id_Tipo;
			}
			set
			{
				if ((this._id_Tipo != value))
				{
					if (this._Tipo_Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_TipoChanging(value);
					this.SendPropertyChanging();
					this._id_Tipo = value;
					this.SendPropertyChanged("id_Tipo");
					this.Onid_TipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Detalles_Venta", Storage="_Detalles_Venta", ThisKey="ID_Cliente", OtherKey="ID_Cliente")]
		public EntitySet<Detalles_Venta> Detalles_Venta
		{
			get
			{
				return this._Detalles_Venta;
			}
			set
			{
				this._Detalles_Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Cliente_Cliente", Storage="_Tipo_Cliente", ThisKey="id_Tipo", OtherKey="id_Tipo", IsForeignKey=true)]
		public Tipo_Cliente Tipo_Cliente
		{
			get
			{
				return this._Tipo_Cliente.Entity;
			}
			set
			{
				Tipo_Cliente previousValue = this._Tipo_Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Cliente.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Tipo_Cliente.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._id_Tipo = value.id_Tipo;
					}
					else
					{
						this._id_Tipo = default(int);
					}
					this.SendPropertyChanged("Tipo_Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalles_Venta(Detalles_Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Detalles_Venta(Detalles_Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle_Lote_Ingreso")]
	public partial class Detalle_Lote_Ingreso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_DetalleLote;
		
		private int _id_Lote;
		
		private int _ID_Producto;
		
		private int _Cantidad;
		
		private decimal _Precio;
		
		private System.Nullable<int> _Descuento;
		
		private decimal _SubTotal;
		
		private System.DateTime _Fecha_Caducida;
		
		private EntityRef<Lote_Ingreso> _Lote_Ingreso;
		
		private EntityRef<Producto> _Producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DetalleLoteChanging(int value);
    partial void Onid_DetalleLoteChanged();
    partial void Onid_LoteChanging(int value);
    partial void Onid_LoteChanged();
    partial void OnID_ProductoChanging(int value);
    partial void OnID_ProductoChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnDescuentoChanging(System.Nullable<int> value);
    partial void OnDescuentoChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnFecha_CaducidaChanging(System.DateTime value);
    partial void OnFecha_CaducidaChanged();
    #endregion
		
		public Detalle_Lote_Ingreso()
		{
			this._Lote_Ingreso = default(EntityRef<Lote_Ingreso>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DetalleLote", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_DetalleLote
		{
			get
			{
				return this._id_DetalleLote;
			}
			set
			{
				if ((this._id_DetalleLote != value))
				{
					this.Onid_DetalleLoteChanging(value);
					this.SendPropertyChanging();
					this._id_DetalleLote = value;
					this.SendPropertyChanged("id_DetalleLote");
					this.Onid_DetalleLoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Lote", DbType="Int NOT NULL")]
		public int id_Lote
		{
			get
			{
				return this._id_Lote;
			}
			set
			{
				if ((this._id_Lote != value))
				{
					if (this._Lote_Ingreso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_LoteChanging(value);
					this.SendPropertyChanging();
					this._id_Lote = value;
					this.SendPropertyChanged("id_Lote");
					this.Onid_LoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", DbType="Int NOT NULL")]
		public int ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Int")]
		public System.Nullable<int> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money NOT NULL")]
		public decimal SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Caducida", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Caducida
		{
			get
			{
				return this._Fecha_Caducida;
			}
			set
			{
				if ((this._Fecha_Caducida != value))
				{
					this.OnFecha_CaducidaChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Caducida = value;
					this.SendPropertyChanged("Fecha_Caducida");
					this.OnFecha_CaducidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lote_Ingreso_Detalle_Lote_Ingreso", Storage="_Lote_Ingreso", ThisKey="id_Lote", OtherKey="id_Lote", IsForeignKey=true)]
		public Lote_Ingreso Lote_Ingreso
		{
			get
			{
				return this._Lote_Ingreso.Entity;
			}
			set
			{
				Lote_Ingreso previousValue = this._Lote_Ingreso.Entity;
				if (((previousValue != value) 
							|| (this._Lote_Ingreso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lote_Ingreso.Entity = null;
						previousValue.Detalle_Lote_Ingreso.Remove(this);
					}
					this._Lote_Ingreso.Entity = value;
					if ((value != null))
					{
						value.Detalle_Lote_Ingreso.Add(this);
						this._id_Lote = value.id_Lote;
					}
					else
					{
						this._id_Lote = default(int);
					}
					this.SendPropertyChanged("Lote_Ingreso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle_Lote_Ingreso", Storage="_Producto", ThisKey="ID_Producto", OtherKey="ID_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Detalle_Lote_Ingreso.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Detalle_Lote_Ingreso.Add(this);
						this._ID_Producto = value.ID_Producto;
					}
					else
					{
						this._ID_Producto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalles_Venta")]
	public partial class Detalles_Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_DetalleVenta;
		
		private int _Cantidad;
		
		private decimal _Precio;
		
		private decimal _Subtotal;
		
		private System.Nullable<decimal> _Descuento;
		
		private System.Nullable<decimal> _SubTotal_Descuento;
		
		private int _id_Venta;
		
		private int _ID_Producto;
		
		private int _ID_Cliente;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<Venta> _Venta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DetalleVentaChanging(int value);
    partial void Onid_DetalleVentaChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnSubtotalChanging(decimal value);
    partial void OnSubtotalChanged();
    partial void OnDescuentoChanging(System.Nullable<decimal> value);
    partial void OnDescuentoChanged();
    partial void OnSubTotal_DescuentoChanging(System.Nullable<decimal> value);
    partial void OnSubTotal_DescuentoChanged();
    partial void Onid_VentaChanging(int value);
    partial void Onid_VentaChanged();
    partial void OnID_ProductoChanging(int value);
    partial void OnID_ProductoChanged();
    partial void OnID_ClienteChanging(int value);
    partial void OnID_ClienteChanged();
    #endregion
		
		public Detalles_Venta()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Producto = default(EntityRef<Producto>);
			this._Venta = default(EntityRef<Venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DetalleVenta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_DetalleVenta
		{
			get
			{
				return this._id_DetalleVenta;
			}
			set
			{
				if ((this._id_DetalleVenta != value))
				{
					this.Onid_DetalleVentaChanging(value);
					this.SendPropertyChanging();
					this._id_DetalleVenta = value;
					this.SendPropertyChanged("id_DetalleVenta");
					this.Onid_DetalleVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Money NOT NULL")]
		public decimal Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Money")]
		public System.Nullable<decimal> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal_Descuento", DbType="Money")]
		public System.Nullable<decimal> SubTotal_Descuento
		{
			get
			{
				return this._SubTotal_Descuento;
			}
			set
			{
				if ((this._SubTotal_Descuento != value))
				{
					this.OnSubTotal_DescuentoChanging(value);
					this.SendPropertyChanging();
					this._SubTotal_Descuento = value;
					this.SendPropertyChanged("SubTotal_Descuento");
					this.OnSubTotal_DescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Venta", DbType="Int NOT NULL")]
		public int id_Venta
		{
			get
			{
				return this._id_Venta;
			}
			set
			{
				if ((this._id_Venta != value))
				{
					if (this._Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_VentaChanging(value);
					this.SendPropertyChanging();
					this._id_Venta = value;
					this.SendPropertyChanged("id_Venta");
					this.Onid_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", DbType="Int NOT NULL")]
		public int ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", DbType="Int NOT NULL")]
		public int ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Detalles_Venta", Storage="_Cliente", ThisKey="ID_Cliente", OtherKey="ID_Cliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Detalles_Venta.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Detalles_Venta.Add(this);
						this._ID_Cliente = value.ID_Cliente;
					}
					else
					{
						this._ID_Cliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalles_Venta", Storage="_Producto", ThisKey="ID_Producto", OtherKey="ID_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Detalles_Venta.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Detalles_Venta.Add(this);
						this._ID_Producto = value.ID_Producto;
					}
					else
					{
						this._ID_Producto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_Detalles_Venta", Storage="_Venta", ThisKey="id_Venta", OtherKey="id_Venta", IsForeignKey=true)]
		public Venta Venta
		{
			get
			{
				return this._Venta.Entity;
			}
			set
			{
				Venta previousValue = this._Venta.Entity;
				if (((previousValue != value) 
							|| (this._Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venta.Entity = null;
						previousValue.Detalles_Venta.Remove(this);
					}
					this._Venta.Entity = value;
					if ((value != null))
					{
						value.Detalles_Venta.Add(this);
						this._id_Venta = value.id_Venta;
					}
					else
					{
						this._id_Venta = default(int);
					}
					this.SendPropertyChanged("Venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estados")]
	public partial class Estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Estado;
		
		private string _Estado;
		
		private EntitySet<Venta> _Venta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_EstadoChanging(int value);
    partial void Onid_EstadoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Estados()
		{
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Estado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Estado
		{
			get
			{
				return this._id_Estado;
			}
			set
			{
				if ((this._id_Estado != value))
				{
					this.Onid_EstadoChanging(value);
					this.SendPropertyChanging();
					this._id_Estado = value;
					this.SendPropertyChanged("id_Estado");
					this.Onid_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Venta", Storage="_Venta", ThisKey="id_Estado", OtherKey="id_Estado")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lote_Ingreso")]
	public partial class Lote_Ingreso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Lote;
		
		private int _ID_CasaFarmaceutica;
		
		private System.DateTime _Fecha_Ingreso;
		
		private bool _Estado;
		
		private System.Nullable<int> _Descuento;
		
		private decimal _Total_Lote;
		
		private int _id_Usuario;
		
		private EntitySet<Detalle_Lote_Ingreso> _Detalle_Lote_Ingreso;
		
		private EntityRef<Casa_Farmaceutica> _Casa_Farmaceutica;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_LoteChanging(int value);
    partial void Onid_LoteChanged();
    partial void OnID_CasaFarmaceuticaChanging(int value);
    partial void OnID_CasaFarmaceuticaChanged();
    partial void OnFecha_IngresoChanging(System.DateTime value);
    partial void OnFecha_IngresoChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    partial void OnDescuentoChanging(System.Nullable<int> value);
    partial void OnDescuentoChanged();
    partial void OnTotal_LoteChanging(decimal value);
    partial void OnTotal_LoteChanged();
    partial void Onid_UsuarioChanging(int value);
    partial void Onid_UsuarioChanged();
    #endregion
		
		public Lote_Ingreso()
		{
			this._Detalle_Lote_Ingreso = new EntitySet<Detalle_Lote_Ingreso>(new Action<Detalle_Lote_Ingreso>(this.attach_Detalle_Lote_Ingreso), new Action<Detalle_Lote_Ingreso>(this.detach_Detalle_Lote_Ingreso));
			this._Casa_Farmaceutica = default(EntityRef<Casa_Farmaceutica>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Lote", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Lote
		{
			get
			{
				return this._id_Lote;
			}
			set
			{
				if ((this._id_Lote != value))
				{
					this.Onid_LoteChanging(value);
					this.SendPropertyChanging();
					this._id_Lote = value;
					this.SendPropertyChanged("id_Lote");
					this.Onid_LoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CasaFarmaceutica", DbType="Int NOT NULL")]
		public int ID_CasaFarmaceutica
		{
			get
			{
				return this._ID_CasaFarmaceutica;
			}
			set
			{
				if ((this._ID_CasaFarmaceutica != value))
				{
					if (this._Casa_Farmaceutica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CasaFarmaceuticaChanging(value);
					this.SendPropertyChanging();
					this._ID_CasaFarmaceutica = value;
					this.SendPropertyChanged("ID_CasaFarmaceutica");
					this.OnID_CasaFarmaceuticaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Ingreso", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Ingreso
		{
			get
			{
				return this._Fecha_Ingreso;
			}
			set
			{
				if ((this._Fecha_Ingreso != value))
				{
					this.OnFecha_IngresoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Ingreso = value;
					this.SendPropertyChanged("Fecha_Ingreso");
					this.OnFecha_IngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Int")]
		public System.Nullable<int> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Lote", DbType="Money NOT NULL")]
		public decimal Total_Lote
		{
			get
			{
				return this._Total_Lote;
			}
			set
			{
				if ((this._Total_Lote != value))
				{
					this.OnTotal_LoteChanging(value);
					this.SendPropertyChanging();
					this._Total_Lote = value;
					this.SendPropertyChanged("Total_Lote");
					this.OnTotal_LoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Usuario", DbType="Int NOT NULL")]
		public int id_Usuario
		{
			get
			{
				return this._id_Usuario;
			}
			set
			{
				if ((this._id_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._id_Usuario = value;
					this.SendPropertyChanged("id_Usuario");
					this.Onid_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lote_Ingreso_Detalle_Lote_Ingreso", Storage="_Detalle_Lote_Ingreso", ThisKey="id_Lote", OtherKey="id_Lote")]
		public EntitySet<Detalle_Lote_Ingreso> Detalle_Lote_Ingreso
		{
			get
			{
				return this._Detalle_Lote_Ingreso;
			}
			set
			{
				this._Detalle_Lote_Ingreso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Casa_Farmaceutica_Lote_Ingreso", Storage="_Casa_Farmaceutica", ThisKey="ID_CasaFarmaceutica", OtherKey="ID_CasaFarmaceutica", IsForeignKey=true)]
		public Casa_Farmaceutica Casa_Farmaceutica
		{
			get
			{
				return this._Casa_Farmaceutica.Entity;
			}
			set
			{
				Casa_Farmaceutica previousValue = this._Casa_Farmaceutica.Entity;
				if (((previousValue != value) 
							|| (this._Casa_Farmaceutica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Casa_Farmaceutica.Entity = null;
						previousValue.Lote_Ingreso.Remove(this);
					}
					this._Casa_Farmaceutica.Entity = value;
					if ((value != null))
					{
						value.Lote_Ingreso.Add(this);
						this._ID_CasaFarmaceutica = value.ID_CasaFarmaceutica;
					}
					else
					{
						this._ID_CasaFarmaceutica = default(int);
					}
					this.SendPropertyChanged("Casa_Farmaceutica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Lote_Ingreso", Storage="_Usuario", ThisKey="id_Usuario", OtherKey="id_Usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Lote_Ingreso.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Lote_Ingreso.Add(this);
						this._id_Usuario = value.id_Usuario;
					}
					else
					{
						this._id_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle_Lote_Ingreso(Detalle_Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Lote_Ingreso = this;
		}
		
		private void detach_Detalle_Lote_Ingreso(Detalle_Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Lote_Ingreso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Producto;
		
		private string _Nombre_Producto;
		
		private decimal _Precio_Costo;
		
		private decimal _Precio_Venta;
		
		private bool _Estado;
		
		private int _ID_Categoria;
		
		private EntitySet<Detalle_Lote_Ingreso> _Detalle_Lote_Ingreso;
		
		private EntitySet<Detalles_Venta> _Detalles_Venta;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProductoChanging(int value);
    partial void OnID_ProductoChanged();
    partial void OnNombre_ProductoChanging(string value);
    partial void OnNombre_ProductoChanged();
    partial void OnPrecio_CostoChanging(decimal value);
    partial void OnPrecio_CostoChanged();
    partial void OnPrecio_VentaChanging(decimal value);
    partial void OnPrecio_VentaChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    partial void OnID_CategoriaChanging(int value);
    partial void OnID_CategoriaChanged();
    #endregion
		
		public Producto()
		{
			this._Detalle_Lote_Ingreso = new EntitySet<Detalle_Lote_Ingreso>(new Action<Detalle_Lote_Ingreso>(this.attach_Detalle_Lote_Ingreso), new Action<Detalle_Lote_Ingreso>(this.detach_Detalle_Lote_Ingreso));
			this._Detalles_Venta = new EntitySet<Detalles_Venta>(new Action<Detalles_Venta>(this.attach_Detalles_Venta), new Action<Detalles_Venta>(this.detach_Detalles_Venta));
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Producto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Producto
		{
			get
			{
				return this._ID_Producto;
			}
			set
			{
				if ((this._ID_Producto != value))
				{
					this.OnID_ProductoChanging(value);
					this.SendPropertyChanging();
					this._ID_Producto = value;
					this.SendPropertyChanged("ID_Producto");
					this.OnID_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Producto", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre_Producto
		{
			get
			{
				return this._Nombre_Producto;
			}
			set
			{
				if ((this._Nombre_Producto != value))
				{
					this.OnNombre_ProductoChanging(value);
					this.SendPropertyChanging();
					this._Nombre_Producto = value;
					this.SendPropertyChanged("Nombre_Producto");
					this.OnNombre_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_Costo", DbType="Money NOT NULL")]
		public decimal Precio_Costo
		{
			get
			{
				return this._Precio_Costo;
			}
			set
			{
				if ((this._Precio_Costo != value))
				{
					this.OnPrecio_CostoChanging(value);
					this.SendPropertyChanging();
					this._Precio_Costo = value;
					this.SendPropertyChanged("Precio_Costo");
					this.OnPrecio_CostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_Venta", DbType="Money NOT NULL")]
		public decimal Precio_Venta
		{
			get
			{
				return this._Precio_Venta;
			}
			set
			{
				if ((this._Precio_Venta != value))
				{
					this.OnPrecio_VentaChanging(value);
					this.SendPropertyChanging();
					this._Precio_Venta = value;
					this.SendPropertyChanged("Precio_Venta");
					this.OnPrecio_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Categoria", DbType="Int NOT NULL")]
		public int ID_Categoria
		{
			get
			{
				return this._ID_Categoria;
			}
			set
			{
				if ((this._ID_Categoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_Categoria = value;
					this.SendPropertyChanged("ID_Categoria");
					this.OnID_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle_Lote_Ingreso", Storage="_Detalle_Lote_Ingreso", ThisKey="ID_Producto", OtherKey="ID_Producto")]
		public EntitySet<Detalle_Lote_Ingreso> Detalle_Lote_Ingreso
		{
			get
			{
				return this._Detalle_Lote_Ingreso;
			}
			set
			{
				this._Detalle_Lote_Ingreso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalles_Venta", Storage="_Detalles_Venta", ThisKey="ID_Producto", OtherKey="ID_Producto")]
		public EntitySet<Detalles_Venta> Detalles_Venta
		{
			get
			{
				return this._Detalles_Venta;
			}
			set
			{
				this._Detalles_Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Categoria", ThisKey="ID_Categoria", OtherKey="ID_Categoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._ID_Categoria = value.ID_Categoria;
					}
					else
					{
						this._ID_Categoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle_Lote_Ingreso(Detalle_Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Detalle_Lote_Ingreso(Detalle_Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_Detalles_Venta(Detalles_Venta entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Detalles_Venta(Detalles_Venta entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Rol;
		
		private int _Permiso;
		
		private string _Descripcion;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RolChanging(int value);
    partial void Onid_RolChanged();
    partial void OnPermisoChanging(int value);
    partial void OnPermisoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Rol()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Rol
		{
			get
			{
				return this._id_Rol;
			}
			set
			{
				if ((this._id_Rol != value))
				{
					this.Onid_RolChanging(value);
					this.SendPropertyChanging();
					this._id_Rol = value;
					this.SendPropertyChanged("id_Rol");
					this.Onid_RolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permiso", DbType="Int NOT NULL")]
		public int Permiso
		{
			get
			{
				return this._Permiso;
			}
			set
			{
				if ((this._Permiso != value))
				{
					this.OnPermisoChanging(value);
					this.SendPropertyChanging();
					this._Permiso = value;
					this.SendPropertyChanged("Permiso");
					this.OnPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(25)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Usuario", ThisKey="id_Rol", OtherKey="id_Rol")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Cliente")]
	public partial class Tipo_Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Tipo;
		
		private string _Tipo_Cliente1;
		
		private EntitySet<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_TipoChanging(int value);
    partial void Onid_TipoChanged();
    partial void OnTipo_Cliente1Changing(string value);
    partial void OnTipo_Cliente1Changed();
    #endregion
		
		public Tipo_Cliente()
		{
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Tipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Tipo
		{
			get
			{
				return this._id_Tipo;
			}
			set
			{
				if ((this._id_Tipo != value))
				{
					this.Onid_TipoChanging(value);
					this.SendPropertyChanging();
					this._id_Tipo = value;
					this.SendPropertyChanged("id_Tipo");
					this.Onid_TipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tipo_Cliente", Storage="_Tipo_Cliente1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo_Cliente1
		{
			get
			{
				return this._Tipo_Cliente1;
			}
			set
			{
				if ((this._Tipo_Cliente1 != value))
				{
					this.OnTipo_Cliente1Changing(value);
					this.SendPropertyChanging();
					this._Tipo_Cliente1 = value;
					this.SendPropertyChanged("Tipo_Cliente1");
					this.OnTipo_Cliente1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Cliente_Cliente", Storage="_Cliente", ThisKey="id_Tipo", OtherKey="id_Tipo")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Cliente = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venta")]
	public partial class Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Venta;
		
		private System.DateTime _Fecha_Venta;
		
		private decimal _Total_Venta;
		
		private System.Nullable<int> _Descuento;
		
		private System.Nullable<decimal> _Total_Descuento;
		
		private int _id_Usuario;
		
		private int _id_Estado;
		
		private EntitySet<Detalles_Venta> _Detalles_Venta;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_VentaChanging(int value);
    partial void Onid_VentaChanged();
    partial void OnFecha_VentaChanging(System.DateTime value);
    partial void OnFecha_VentaChanged();
    partial void OnTotal_VentaChanging(decimal value);
    partial void OnTotal_VentaChanged();
    partial void OnDescuentoChanging(System.Nullable<int> value);
    partial void OnDescuentoChanged();
    partial void OnTotal_DescuentoChanging(System.Nullable<decimal> value);
    partial void OnTotal_DescuentoChanged();
    partial void Onid_UsuarioChanging(int value);
    partial void Onid_UsuarioChanged();
    partial void Onid_EstadoChanging(int value);
    partial void Onid_EstadoChanged();
    #endregion
		
		public Venta()
		{
			this._Detalles_Venta = new EntitySet<Detalles_Venta>(new Action<Detalles_Venta>(this.attach_Detalles_Venta), new Action<Detalles_Venta>(this.detach_Detalles_Venta));
			this._Estados = default(EntityRef<Estados>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Venta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Venta
		{
			get
			{
				return this._id_Venta;
			}
			set
			{
				if ((this._id_Venta != value))
				{
					this.Onid_VentaChanging(value);
					this.SendPropertyChanging();
					this._id_Venta = value;
					this.SendPropertyChanged("id_Venta");
					this.Onid_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Venta", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Venta
		{
			get
			{
				return this._Fecha_Venta;
			}
			set
			{
				if ((this._Fecha_Venta != value))
				{
					this.OnFecha_VentaChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Venta = value;
					this.SendPropertyChanged("Fecha_Venta");
					this.OnFecha_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Venta", DbType="Money NOT NULL")]
		public decimal Total_Venta
		{
			get
			{
				return this._Total_Venta;
			}
			set
			{
				if ((this._Total_Venta != value))
				{
					this.OnTotal_VentaChanging(value);
					this.SendPropertyChanging();
					this._Total_Venta = value;
					this.SendPropertyChanged("Total_Venta");
					this.OnTotal_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Int")]
		public System.Nullable<int> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Descuento", DbType="Money")]
		public System.Nullable<decimal> Total_Descuento
		{
			get
			{
				return this._Total_Descuento;
			}
			set
			{
				if ((this._Total_Descuento != value))
				{
					this.OnTotal_DescuentoChanging(value);
					this.SendPropertyChanging();
					this._Total_Descuento = value;
					this.SendPropertyChanged("Total_Descuento");
					this.OnTotal_DescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Usuario", DbType="Int NOT NULL")]
		public int id_Usuario
		{
			get
			{
				return this._id_Usuario;
			}
			set
			{
				if ((this._id_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._id_Usuario = value;
					this.SendPropertyChanged("id_Usuario");
					this.Onid_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Estado", DbType="Int NOT NULL")]
		public int id_Estado
		{
			get
			{
				return this._id_Estado;
			}
			set
			{
				if ((this._id_Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_EstadoChanging(value);
					this.SendPropertyChanging();
					this._id_Estado = value;
					this.SendPropertyChanged("id_Estado");
					this.Onid_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_Detalles_Venta", Storage="_Detalles_Venta", ThisKey="id_Venta", OtherKey="id_Venta")]
		public EntitySet<Detalles_Venta> Detalles_Venta
		{
			get
			{
				return this._Detalles_Venta;
			}
			set
			{
				this._Detalles_Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Venta", Storage="_Estados", ThisKey="id_Estado", OtherKey="id_Estado", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._id_Estado = value.id_Estado;
					}
					else
					{
						this._id_Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Venta", Storage="_Usuario", ThisKey="id_Usuario", OtherKey="id_Usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._id_Usuario = value.id_Usuario;
					}
					else
					{
						this._id_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalles_Venta(Detalles_Venta entity)
		{
			this.SendPropertyChanging();
			entity.Venta = this;
		}
		
		private void detach_Detalles_Venta(Detalles_Venta entity)
		{
			this.SendPropertyChanging();
			entity.Venta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Usuario;
		
		private int _id_Rol;
		
		private string _Usuario1;
		
		private string _Password;
		
		private bool _Estado;
		
		private System.DateTime _Fecha_Creacion;
		
		private System.Nullable<System.DateTime> _Fecha_Desactivacion;
		
		private EntitySet<Lote_Ingreso> _Lote_Ingreso;
		
		private EntitySet<Venta> _Venta;
		
		private EntitySet<Personal> _Personal;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_UsuarioChanging(int value);
    partial void Onid_UsuarioChanged();
    partial void Onid_RolChanging(int value);
    partial void Onid_RolChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    partial void OnFecha_CreacionChanging(System.DateTime value);
    partial void OnFecha_CreacionChanged();
    partial void OnFecha_DesactivacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_DesactivacionChanged();
    #endregion
		
		public Usuario()
		{
			this._Lote_Ingreso = new EntitySet<Lote_Ingreso>(new Action<Lote_Ingreso>(this.attach_Lote_Ingreso), new Action<Lote_Ingreso>(this.detach_Lote_Ingreso));
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			this._Personal = new EntitySet<Personal>(new Action<Personal>(this.attach_Personal), new Action<Personal>(this.detach_Personal));
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Usuario
		{
			get
			{
				return this._id_Usuario;
			}
			set
			{
				if ((this._id_Usuario != value))
				{
					this.Onid_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._id_Usuario = value;
					this.SendPropertyChanged("id_Usuario");
					this.Onid_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Rol", DbType="Int NOT NULL")]
		public int id_Rol
		{
			get
			{
				return this._id_Rol;
			}
			set
			{
				if ((this._id_Rol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_RolChanging(value);
					this.SendPropertyChanging();
					this._id_Rol = value;
					this.SendPropertyChanged("id_Rol");
					this.Onid_RolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Creacion", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Creacion
		{
			get
			{
				return this._Fecha_Creacion;
			}
			set
			{
				if ((this._Fecha_Creacion != value))
				{
					this.OnFecha_CreacionChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Creacion = value;
					this.SendPropertyChanged("Fecha_Creacion");
					this.OnFecha_CreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Desactivacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Desactivacion
		{
			get
			{
				return this._Fecha_Desactivacion;
			}
			set
			{
				if ((this._Fecha_Desactivacion != value))
				{
					this.OnFecha_DesactivacionChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Desactivacion = value;
					this.SendPropertyChanged("Fecha_Desactivacion");
					this.OnFecha_DesactivacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Lote_Ingreso", Storage="_Lote_Ingreso", ThisKey="id_Usuario", OtherKey="id_Usuario")]
		public EntitySet<Lote_Ingreso> Lote_Ingreso
		{
			get
			{
				return this._Lote_Ingreso;
			}
			set
			{
				this._Lote_Ingreso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Venta", Storage="_Venta", ThisKey="id_Usuario", OtherKey="id_Usuario")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Personal", Storage="_Personal", ThisKey="id_Usuario", OtherKey="id_Usuario")]
		public EntitySet<Personal> Personal
		{
			get
			{
				return this._Personal;
			}
			set
			{
				this._Personal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Rol", ThisKey="id_Rol", OtherKey="id_Rol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._id_Rol = value.id_Rol;
					}
					else
					{
						this._id_Rol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lote_Ingreso(Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Lote_Ingreso(Lote_Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Personal(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Personal(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personal")]
	public partial class Personal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Personal;
		
		private string _DPI;
		
		private string _Primer_Nombre;
		
		private string _Segundo_Nombre;
		
		private string _Primer_Apellido;
		
		private string _Segundo_Apellido;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private int _id_Usuario;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_PersonalChanging(int value);
    partial void Onid_PersonalChanged();
    partial void OnDPIChanging(string value);
    partial void OnDPIChanged();
    partial void OnPrimer_NombreChanging(string value);
    partial void OnPrimer_NombreChanged();
    partial void OnSegundo_NombreChanging(string value);
    partial void OnSegundo_NombreChanged();
    partial void OnPrimer_ApellidoChanging(string value);
    partial void OnPrimer_ApellidoChanged();
    partial void OnSegundo_ApellidoChanging(string value);
    partial void OnSegundo_ApellidoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void Onid_UsuarioChanging(int value);
    partial void Onid_UsuarioChanged();
    #endregion
		
		public Personal()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Personal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_Personal
		{
			get
			{
				return this._id_Personal;
			}
			set
			{
				if ((this._id_Personal != value))
				{
					this.Onid_PersonalChanging(value);
					this.SendPropertyChanging();
					this._id_Personal = value;
					this.SendPropertyChanged("id_Personal");
					this.Onid_PersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPI", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string DPI
		{
			get
			{
				return this._DPI;
			}
			set
			{
				if ((this._DPI != value))
				{
					this.OnDPIChanging(value);
					this.SendPropertyChanging();
					this._DPI = value;
					this.SendPropertyChanged("DPI");
					this.OnDPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primer_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Primer_Nombre
		{
			get
			{
				return this._Primer_Nombre;
			}
			set
			{
				if ((this._Primer_Nombre != value))
				{
					this.OnPrimer_NombreChanging(value);
					this.SendPropertyChanging();
					this._Primer_Nombre = value;
					this.SendPropertyChanged("Primer_Nombre");
					this.OnPrimer_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segundo_Nombre", DbType="NVarChar(50)")]
		public string Segundo_Nombre
		{
			get
			{
				return this._Segundo_Nombre;
			}
			set
			{
				if ((this._Segundo_Nombre != value))
				{
					this.OnSegundo_NombreChanging(value);
					this.SendPropertyChanging();
					this._Segundo_Nombre = value;
					this.SendPropertyChanged("Segundo_Nombre");
					this.OnSegundo_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primer_Apellido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Primer_Apellido
		{
			get
			{
				return this._Primer_Apellido;
			}
			set
			{
				if ((this._Primer_Apellido != value))
				{
					this.OnPrimer_ApellidoChanging(value);
					this.SendPropertyChanging();
					this._Primer_Apellido = value;
					this.SendPropertyChanged("Primer_Apellido");
					this.OnPrimer_ApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segundo_Apellido", DbType="NVarChar(50)")]
		public string Segundo_Apellido
		{
			get
			{
				return this._Segundo_Apellido;
			}
			set
			{
				if ((this._Segundo_Apellido != value))
				{
					this.OnSegundo_ApellidoChanging(value);
					this.SendPropertyChanging();
					this._Segundo_Apellido = value;
					this.SendPropertyChanged("Segundo_Apellido");
					this.OnSegundo_ApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Usuario", DbType="Int NOT NULL")]
		public int id_Usuario
		{
			get
			{
				return this._id_Usuario;
			}
			set
			{
				if ((this._id_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._id_Usuario = value;
					this.SendPropertyChanged("id_Usuario");
					this.Onid_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Personal", Storage="_Usuario", ThisKey="id_Usuario", OtherKey="id_Usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Personal.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Personal.Add(this);
						this._id_Usuario = value.id_Usuario;
					}
					else
					{
						this._id_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reportes")]
	public partial class Reporte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Reporte;
		
		private string _Reporte1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ReporteChanging(int value);
    partial void Onid_ReporteChanged();
    partial void OnReporte1Changing(string value);
    partial void OnReporte1Changed();
    #endregion
		
		public Reporte()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Reporte", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_Reporte
		{
			get
			{
				return this._id_Reporte;
			}
			set
			{
				if ((this._id_Reporte != value))
				{
					this.Onid_ReporteChanging(value);
					this.SendPropertyChanging();
					this._id_Reporte = value;
					this.SendPropertyChanged("id_Reporte");
					this.Onid_ReporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Reporte", Storage="_Reporte1", DbType="NVarChar(50)")]
		public string Reporte1
		{
			get
			{
				return this._Reporte1;
			}
			set
			{
				if ((this._Reporte1 != value))
				{
					this.OnReporte1Changing(value);
					this.SendPropertyChanging();
					this._Reporte1 = value;
					this.SendPropertyChanged("Reporte1");
					this.OnReporte1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
